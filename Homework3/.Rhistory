qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
library(ggplot2)
library(ROCR)
library(RCurl)
crime <- read.csv("C:/Users/Rob/Desktop/CUNY  23501347/IS621 Analytics/crime-training-data.csv",header=TRUE,na.strings=c(" "))
crime_eval <- read.csv("C:/Users/Rob/Desktop/CUNY  23501347/IS621 Analytics/crime-evaluation-data.csv",header=TRUE,na.strings=c(" "))
crime$target <- as.factor(crime$target)
crime$chas <- as.factor(crime$chas)
crime_eval$chas <- as.factor(crime_eval$chas)
crime.nofactor <- subset(crime,select=-c(chas,target))
# build a correlation table to study the variable relationships
cor.table <- cor(crime.nofactor) # build a table of inter-variable correlation values
(cor.table)
smp_size <- floor(0.80 * nrow(crime))
train_ind <- sample(seq_len(nrow(crime)), size = smp_size)
train <- crime[train_ind, ]
test <- crime[-train_ind, ]
qm <- glm(target ~ .,family=binomial(link='logit'),data=train)
print(summary(qm))
p <- predict(qm, newdata=subset(test,select=c(1,2,3,4,5,6,7,8,9,10,11,12,13)), type="response")
pr <- prediction(p, test$target)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
qm <- glm(target ~ nox + rad,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.948
qm <- glm(target ~ nox + rad + zn,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(1,4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
train_ind <- sample(seq_len(nrow(crime)), size = smp_size)
train <- crime[train_ind, ]
test <- crime[-train_ind, ]
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
qm <- glm(target ~ nox + rad,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.948
qm <- glm(target ~ nox + rad + zn,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(1,4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #
train <- crime[train_ind, ]
test <- crime[-train_ind, ]
qm <- glm(target ~ nox + rad,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.948
qm <- glm(target ~ nox + rad + zn,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(1,4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
qm <- glm(target ~ nox + rad,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.948
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
qm <- glm(target ~ nox + rad,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.948
qm <- glm(target ~ nox + rad + zn,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(1,4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
set.seed(121)
smp_size <- floor(0.80 * nrow(crime))
## set the seed to make your partition reproductible
train_ind <- sample(seq_len(nrow(crime)), size = smp_size)
train <- crime[train_ind, ]
test <- crime[-train_ind, ]
# quick look at model with all variables
qm <- glm(target ~ .,family=binomial(link='logit'),data=train)
print(summary(qm))
p <- predict(qm, newdata=subset(test,select=c(1,2,3,4,5,6,7,8,9,10,11,12,13)), type="response")
pr <- prediction(p, test$target)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
#
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc
#show the AUC for the most valuable variable - nox (nitrogen oxides concentration - ie: poisoned environment)
qm <- glm(target ~ nox,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.934
qm <- glm(target ~ nox + rad,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #.948
qm <- glm(target ~ nox + rad + zn,family=binomial(link='logit'),data=train)
p <- predict(qm, newdata=subset(test,select=c(1,4,8)), type="response")
pr <- prediction(p, test$target)
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc  #
install.packages(("leaps"))
install.packages("ISLR")
library(ISLR)
summary(Hitters)
Hitters=na.omit(Hitters)
with(Hitters,sum(is.na(Salary)))
install.packages("acepack")
install.packages("Hmisc")
model_fin <- glm(target ~ .,family=binomial(link='logit'),data=crime)
backward <- step(model_fin)
summary(backward)
